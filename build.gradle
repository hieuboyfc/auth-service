plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.zimji'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.projectlombok:lombok'

    // SPRING DEPENDENCIES
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    // implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web-services"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-devtools"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openAPIVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"
    implementation "org.modelmapper:modelmapper:${modelMapperVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "io.vertx:vertx-core:${vertxVersion}"

    // TEST
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    // testImplementation "org.springframework.security:spring-security-test"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
